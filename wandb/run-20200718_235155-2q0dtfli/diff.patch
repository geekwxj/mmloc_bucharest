diff --git a/mmloc_keras.py b/mmloc_keras.py
index 5ed6ec6..c7b4570 100644
--- a/mmloc_keras.py
+++ b/mmloc_keras.py
@@ -13,25 +13,25 @@ from sklearn.metrics import mean_squared_error
 from keras.optimizers import Adam, RMSprop
 from keras.utils import plot_model
 from keras.callbacks import EarlyStopping, Callback, TensorBoard
-# import wandb
-# from wandb.keras import WandbCallback
-# Hyper-parameters
+import wandb
+from wandb.keras import WandbCallback
+
 sensor_input_size = 3
 wifi_input_size = 43
 hidden_size = 128
 batch_size = 100
 output_dim = 2
-num_epochs = 1
-learning_rate = 0.001
+num_epochs = 300
+learning_rate = 0.0005
 
-model_name = "mmloc_bucharest"
+model_name = "mmloc_concate_bucha"
 
-# wandb.init(entity="mmloc",project=model_name,sync_tensorboard=True,
-#            config={"epochs": num_epochs,"batch_size": batch_size,"wifi_hidden_size":hidden_size,
-#                    "learning_rate":learning_rate,"sensor_input_size":sensor_input_size,
-#                    "wifi_input_size":wifi_input_size,"output_dim":output_dim
-#                    }
-#            )
+wandb.init(entity="mmloc",project=model_name,sync_tensorboard=True,
+            config={"epochs": num_epochs,"batch_size": batch_size,"wifi_hidden_size":hidden_size,
+                    "learning_rate":learning_rate,"sensor_input_size":sensor_input_size,
+                    "wifi_input_size":wifi_input_size,"output_dim":output_dim
+                    }
+            )
 
 
 #load downsample dataset
@@ -81,7 +81,7 @@ mmloc.fit([SensorTrain,WifiTrain], locationtrain,
 
 #save model
 mmloc.save("buchamodel/"+str(model_name)+".h5")
-# mmloc.save(os.path.join(wandb.run.dir, "wanbd_"+str(model_name)+".h5"))
+mmloc.save(os.path.join(wandb.run.dir, "wanbd_"+str(model_name)+".h5"))
 fig1=plt.figure()
 locPrediction = mmloc.predict([SensorTest,WifiTest], batch_size=batch_size)
 aveLocPrediction = pf.get_ave_prediction(locPrediction, batch_size)
@@ -92,7 +92,7 @@ plt.xlabel("x-latitude")
 plt.ylabel("y-longitude")
 plt.title(str(model_name)+" Prediction")
 fig1.savefig("buchapredictionpng/"+str(model_name)+"_locprediction.png")
-# wandb.log({"chart": wandb.Image("romaniapredictionpng/"+str(model_name)+"_locprediction.png")})
+wandb.log({"chart": wandb.Image("romaniapredictionpng/"+str(model_name)+"_locprediction.png")})
 #draw cdf picture
 
 fig=plt.figure()
@@ -106,4 +106,4 @@ plt.legend(str(model_name),loc='upper right')
 plt.grid(True)
 plt.title((str(model_name)+' CDF'))
 fig.savefig("buchacdf/"+str(model_name)+"_CDF.pdf")
-# wandb.log({"chart": wandb.Image("romaniacdf/"+str(model_name)+"_CDF.pdf")})
\ No newline at end of file
+wandb.log({"chart": wandb.Image("romaniacdf/"+str(model_name)+"_CDF.pdf")})
\ No newline at end of file
